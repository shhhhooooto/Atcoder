//******************************************************************
//
//        SUBROUTINE GAUSS38-LAGUERRE20
//              DATA IS GIVEN BY H.NAKAMURA
//              THIS SUBROUTINE IS WRITTEN BY T.HIRANO
//                                           '96 11 29
//******************************************************************
#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <algorithm>

#include "GaussLaguerre.h"

using namespace std;

GaussLaguerre::GaussLaguerre()
{
}
GaussLaguerre::~GaussLaguerre()
{
}


void GaussLaguerre::GaussLag(double xini,double xmid,double* xn,double* wn)
{
   //double xn(58),wn(58),xini,xmid

    static double x[38]={- 9.980499305357e-01, - 9.897394542664e-01,
               - 9.748463285902e-01, - 9.534663309335e-01,
               - 9.257413320486e-01, - 8.918557390046e-01,
               - 8.520350219324e-01, - 8.065441676053e-01,
               - 7.556859037540e-01, - 6.997986803792e-01,
               - 6.392544158297e-01, - 5.744560210478e-01,
               - 5.058347179279e-01, - 4.338471694324e-01,
               - 3.589724404794e-01, - 2.817088097902e-01,
               - 2.025704538921e-01, - 1.220840253379e-01,
               - 4.078514790458e-02,   4.078514790458e-02,
                 1.220840253379e-01,   2.025704538921e-01,
                 2.817088097902e-01,   3.589724404794e-01,
                 4.338471694324e-01,   5.058347179279e-01,
                 5.744560210478e-01,   6.392544158297e-01,
                 6.997986803792e-01,   7.556859037540e-01,
                 8.065441676053e-01,   8.520350219324e-01,
                 8.918557390046e-01,   9.257413320486e-01,
                 9.534663309335e-01,   9.748463285902e-01,
                 9.897394542664e-01,   9.980499305357e-01};

    static double y[20]={7.053988969198e-02,   3.721268180016e-01,
                 9.165821024832e-01,   1.707306531028e00,
         	 2.749199255310e00,    4.048925313850e00,
                 5.615174970848e00,    7.459017453700e00,
                 9.594392870116e00,    1.203880254193e+01,
         	 1.481429346483e+01,   1.794889545992e+01,
                 2.147878834852e+01,   2.545170266868e+01,
                 2.993255471277e+01,   3.501343423054e+01,
                 4.083305702714e+01,   4.761999407237e+01,
                 5.581079574152e+01,   6.652441652668e+01};

    static double w[38]={5.002880749632e-3,    1.161344471647e-2,
                 1.815657770961e-2,    2.457973973823e-2,
                 3.083950054518e-2,    3.689408159400e-2,
                 4.270315850467e-2,    4.822806186076e-2,
                 5.343201991033e-2,    5.828039914700e-2,
                 6.274093339213e-2,    6.678393797914e-2,
                 7.038250706690e-2,    7.351269258474e-2,
                 7.615366354845e-2,    7.828784465821e-2,
                 7.990103324353e-2,    8.098249377060e-2,
                 8.152502928039e-2,    8.152502928039e-2,
                 8.098249377060e-2,    7.990103324353e-2,
                 7.828784465821e-2,    7.615366354845e-2,
                 7.351269258474e-2,    7.038250706690e-2,
                 6.678393797914e-2,    6.274093339213e-2,
                 5.828039914700e-2,    5.343201991033e-2,
                 4.822806186076e-2,    4.270315850467e-2,
                 3.689408159400e-2,    3.083950054518e-2,
                 2.457973973823e-2,    1.815657770961e-2,
                 1.161344471647e-2,    5.002880749632e-3};

    static double u[20]={1.687468018511e-1,    2.912543620060e-1,
                 2.666861028666e-1,    1.660024532694e-1,
                 7.482606467538e-2,    2.496441732002e-2,
                 6.202550828442e-3,    1.144962383071e-3,
                 1.557417806303e-4,    1.540143980270e-5,
                 1.086486325120e-6,    5.330127202618e-8,
                 1.757985532862e-9,    3.725505729478e-11,
                 4.767526861010e-13,   3.372848343678e-15,
                 1.155014009180e-17,   1.539522135110e-20,
                 5.286443248824e-24,   1.656456602226e-28};
 

    for(int i=0;i<38;i++) {
        xn[i] = (xmid-xini)*x[i]/2. +(xini+xmid)/2.;
        wn[i] = (xmid-xini)*w[i]/2.;
    }

    for(int j=0;j<20;j++) {
        xn[j+38] = y[j] + xmid;
        wn[j+38] = exp(y[j])*u[j];
    }

}



void GaussLaguerre::Gauss38(double xini,double xfin,double* xn,double* wn)
{
      double  x[38], w[38];

    x[37]=9.980499305357e-01;
    x[36]=9.897394542664e-01;
    x[35]=9.748463285902e-01;
    x[34]=9.534663309335e-01;
    x[33]=9.257413320486e-01;
    x[32]=8.918557390046e-01;
    x[31]=8.520350219324e-01;
    x[30]=8.065441676053e-01;
    x[29]=7.556859037540e-01;
    x[28]=6.997986803792e-01;
    x[27]=6.392544158297e-01;
    x[26]=5.744560210478e-01;
    x[25]=5.058347179279e-01;
    x[24]=4.338471694324e-01;
    x[23]=3.589724404794e-01;
    x[22]=2.817088097902e-01;
    x[21]=2.025704538921e-01;
    x[20]=1.220840253379e-01;
    x[19]=4.078514790458e-2;

//    .....   WEIGHT       ...........
    w[37]=5.002880749632e-3;
    w[36]=1.161344471647e-2;
    w[35]=1.815657770961e-2;
    w[34]=2.457973973823e-2;
    w[33]=3.083950054518e-2;
    w[32]=3.689408159400e-2;
    w[31]=4.270315850467e-2;
    w[30]=4.822806186076e-2;
    w[29]=5.343201991033e-2;
    w[28]=5.828039914700e-2;
    w[27]=6.274093339213e-2;
    w[26]=6.678393797914e-2;
    w[25]=7.038250706690e-2;
    w[24]=7.351269258474e-2;
    w[23]=7.615366354845e-2;
    w[22]=7.828784465821e-2;
    w[21]=7.990103324353e-2;
    w[20]=8.098249377060e-2;
    w[19]=8.152502928039e-2;

    for(int i=0;i<19;i++) {
	x[i] = -x[37-i];
	w[i] =  w[37-i];
    }
    for(int i=0;i<38;i++) {
         xn[i] =(xfin-xini)*x[i]/2.0+(xini+xfin)/2.0;
         wn[i] =(xfin-xini)*w[i]/2.0;
    }

}
